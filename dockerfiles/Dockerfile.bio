# Roberts Lab
# Aquatic & Fishery Sciences
# University of Washington
# Bioinformatics Image

## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #
# List of bioinformatics software in this image #
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #

#################################
# SOFTWARE		VERSION 		#
#################################
# bedtools		2.26.0  		#
# bismark		0.15.0  		#
# blast			2.6.0+  		#
# bowtie1		1.1.2			#
# bowtie2		2.2.8   		#
# bsmap			2.90    		#
# canu			1.6			#
# cufflinks		2.1.1   		#
# dammit						#
# ipyrad			0.7.11  		#
# jupyter						#
# miniconda		3				#
# miniasm		0.2				#
# minimap2		2.1.1				#
# multiqc		0.8				#
# fastqc		0.11.5  		#
# fastx_toolkit	0.0.13  		#
# quast	4.5	#
# R				3.4.1   		#
# Racon			0.5.0			#
# samtools		0.1.19  		#
# stacks		1.40    		#
# tophat		2.1.1   		#
# trimmomatic	0.36    		#
# trinity		2.2.0			#
# vcftools		0.1.14	#
## ## ## ## ## ## ## ## ## ## ## 



FROM debian:8
MAINTAINER Sam White <samwhite@uw.edu>

# Java install
RUN echo "deb http://http.debian.net/debian jessie-backports main" > /etc/apt/sources.list.d/jessie-backports.list
RUN apt-get update -y && \
    apt-get install -y \
    software-properties-common
RUN apt-get update -y && \
    apt-get install -y -t \
    jessie-backports openjdk-8-jre-headless

# Get software dependencies
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
    apt-utils \
    locales \
    debconf \
    libc6 \
    openjdk-8-jre-headless \
    build-essential \
    pkg-config \
    libncurses-dev \
    ncurses-dev \
    libncurses5-dev \
    libncursesw5-dev \
    libpng12-0 \
    zlib1g-dev \
    dialog \
    sudo \
    nano \
    curl \
    git \
    man \
    unzip \
    bzip2 \
    wget \
    automake \
    gfortran \
    gcc-multilib \
    gobjc++ \
    aptitude \
    xorg-dev \
    texinfo \
    libsparsehash-dev \
    gdebi-core \
    libapparmor1 \
    libssl1.0.0 \
    libcurl4-openssl-dev \
    libssl-dev \
    psmisc \
    python-setuptools \
    python-dev \
    net-tools \
    sqlite3 \
	infernal \
	liburi-escape-xs-perl \
	emboss \
	liburi-perl \
	ruby \
	hmmer \
	libsm6 \
	libxrender1 \
	libfontconfig1 \
	parallel \
	locales-all \
	libzmq3-dev \
	libpango1.0-dev \
	tree \
	htop \
	parallel \
    && apt-get clean

    
RUN aptitude update && \
    aptitude install -y \
    libreadline-dev
    
# Set the locale
#RUN locale-gen en_US.UTF-8
#RUN dpkg-reconfigure locales
#RUN sed -i '/en_US.UTF-8 UTF-8/c\en_US.UTF-8 UTF-8' /etc/locale.gen
#ENV LANG en_US.UTF-8
#ENV LANGUAGE en_US.UTF-8
#ENV LC_ALL en_US.UTF-8

# Install pip (python package manager)
RUN easy_install pip

# Make bioinformatics directory
RUN mkdir /usr/local/bioinformatics

# Set working directory
WORKDIR /usr/local/bioinformatics

# Add bioinformatics directory to PATH
# ENV PATH /usr/local/bioinformatics:$PATH

# Install MiniConda (for installing Jupyter Notebook)
RUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
	&& bash Miniconda3-latest-Linux-x86_64.sh -b \
	&& (cd /root/miniconda3/bin && ./conda update conda -y) \
	&& rm Miniconda3-latest-Linux-x86_64.sh

ENV PATH /root/miniconda3/bin:$PATH


# Install bedtools (v2.26.0)
RUN wget https://github.com/arq5x/bedtools2/releases/download/v2.26.0/bedtools-2.26.0.tar.gz \
	&& tar -zxvf bedtools-2.26.0.tar.gz \
	&& make -C /usr/local/bioinformatics/bedtools2 \
	&& rm bedtools-2.26.0.tar.gz

ENV PATH /usr/local/bioinformatics/bedtools2:$PATH

## Add MiniConda channels to allow easy install of khmer and pyinotify (dammit dependencies)
RUN conda config --add channels ged --add channels bioconda --add channels conda-forge

    
# Install blast (v2.6.0+)
RUN wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.6.0/ncbi-blast-2.6.0+-x64-linux.tar.gz \
	&& tar -zxvpf ncbi-blast-2.6.0+-x64-linux.tar.gz \
	&& rm ncbi-blast-2.6.0+-x64-linux.tar.gz

ENV PATH /usr/local/bioinformatics/ncbi-blast-2.6.0+/bin:$PATH

# Install bowtie2 (v2.2.8)
RUN wget --output-document=bowtie2-2.2.8-linux-x86_64.zip \
	https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.2.8/bowtie2-2.2.8-linux-x86_64.zip/download \
	&& unzip bowtie2-2.2.8-linux-x86_64.zip \
	&& rm bowtie2-2.2.8-linux-x86_64.zip

ENV PATH /usr/local/bioinformatics/bowtie2-2.2.8:$PATH

# Install cufflinks (v2.1.1)
RUN wget http://cole-trapnell-lab.github.io/cufflinks/assets/downloads/cufflinks-2.1.1.tar.gz \
	&& tar -zxvf cufflinks-2.1.1.tar.gz \
	&& rm cufflinks-2.1.1.tar.gz

ENV PATH /usr/local/bioinformatics/cufflinks-2.1.1:$PATH

# Install FastQC (v0.11.5)
RUN wget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip \
	&& unzip fastqc_v0.11.5.zip \
	&& chmod 755 /usr/local/bioinformatics/FastQC/fastqc \
	&& rm fastqc_v0.11.5.zip

ENV PATH /usr/local/bioinformatics/FastQC:$PATH
	
# Install samtools0.1.19 (version required for use with Stacks)
RUN wget --output-document=samtools-0.1.19.tar.bz2 \
	http://sourceforge.net/projects/samtools/files/samtools/0.1.19/samtools-0.1.19.tar.bz2/download \
	&& tar -xjf samtools-0.1.19.tar.bz2 \
	&& make -C /usr/local/bioinformatics/samtools-0.1.19/ \
	&& rm samtools-0.1.19.tar.bz2

# Install tophat (v2.1.1)
RUN wget https://ccb.jhu.edu/software/tophat/downloads/tophat-2.1.1.Linux_x86_64.tar.gz \
	&& tar -zxvf tophat-2.1.1.Linux_x86_64.tar.gz \
	&& rm tophat-2.1.1.Linux_x86_64.tar.gz

ENV PATH /usr/local/bioinformatics/tophat-2.1.1.Linux_x86_64:$PATH

# Install trimmomatic (v0.36)
RUN wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.36.zip \
	&& unzip Trimmomatic-0.36.zip \
	&& echo 'alias trimmomatic="java -jar /usr/local/bioinformatics/Trimmomatic-0.36/trimmomatic-0.36.jar"' >> ~/.bashrc \
	&& rm Trimmomatic-0.36.zip

# Install fastx toolkit (v0.0.13)
RUN wget http://hannonlab.cshl.edu/fastx_toolkit/fastx_toolkit_0.0.13_binaries_Linux_2.6_amd64.tar.bz2 \
	&& mkdir /usr/local/bioinformatics/fastx_toolkit \
	&& tar -xjf fastx_toolkit_0.0.13_binaries_Linux_2.6_amd64.tar.bz2 -C /usr/local/bioinformatics/fastx_toolkit \
	&& rm fastx_toolkit_0.0.13_binaries_Linux_2.6_amd64.tar.bz2

ENV PATH /usr/local/bioinformatics/fastx_toolkit/bin:$PATH

# Install bismark (v0.15.0)
RUN wget http://www.bioinformatics.babraham.ac.uk/projects/bismark/bismark_v0.15.0.tar.gz \
	&& tar -xzf bismark_v0.15.0.tar.gz \
	&& rm bismark_v0.15.0.tar.gz

ENV PATH /usr/local/bioinformatics/bismark_v0.15.0:$PATH

# Install bsmap (v2.90)
RUN wget http://lilab.research.bcm.edu/dldcc-web/lilab/yxi/bsmap/bsmap-2.90.tgz \
	&& tar -xzf bsmap-2.90.tgz \
	&& (cd /usr/local/bioinformatics/bsmap-2.90 && exec make && make install) \
	&& rm bsmap-2.90.tgz

ENV PATH /usr/local/bioinformatics/bsmap-2.90:$PATH


# Install Stacks (v.1.40)
RUN wget http://catchenlab.life.illinois.edu/stacks/source/stacks-1.40.tar.gz \
	&& tar -xzf stacks-1.40.tar.gz \
	&& (cd /usr/local/bioinformatics/stacks-1.40 && ./configure --enable-sparsehash --enable-bam --with-bam-include-path=/usr/local/bioinformatics/samtools-0.1.19/ --with-bam-lib-path=/usr/local/bioinformatics/samtools-0.1.19/ && make -j 4 && make install) \
	&& rm stacks-1.40.tar.gz

## Install Jupyter Notebook & all dependencies (via MiniConda)
# Creates config file
# Sets browser to FALSE
# Sets default IP address to 0.0.0.0; uses \x27 to set single quotes
# Sets browser token (so no password needed to access notebooks) to blank; uses \x27 to set single quotes
# Sets iopub data rate limit to a much higher value than default to allow better handling of stdout.
RUN conda install jupyter -y \
	&& jupyter notebook --generate-config --allow-root \
	&& (sed -i '/c.NotebookApp.open_browser/c\c.NotebookApp.open_browser = False' /root/.jupyter/jupyter_notebook_config.py) \
	&& (sed -i '/c.NotebookApp.ip/c\c.NotebookApp.ip = \x270.0.0.0\x27' /root/.jupyter/jupyter_notebook_config.py) \
	&& (sed -i '/c.NotebookApp.token/c\c.NotebookApp.token = u\x27\x27' /root/.jupyter/jupyter_notebook_config.py) \
	&& (sed -i '/c.NotebookApp.iopub_data_rate_limit/c\c.NotebookApp.iopub_data_rate_limit = 10000000000' /root/.jupyter/jupyter_notebook_config.py)

# Install Python2 Kernel for Jupyter Notebooks
RUN python2 -m pip install ipykernel
RUN python2 -m ipykernel install --user

## Install MultiQC (v.0.8)
RUN wget https://github.com/ewels/MultiQC/archive/v0.8.tar.gz \
	&& tar -xzf v0.8.tar.gz \
	&& (cd /usr/local/bioinformatics/MultiQC-0.8 && exec python setup.py install) \
	&& rm /usr/local/bioinformatics/v0.8.tar.gz

##Install Trinity (v.2.2.0)
RUN wget https://github.com/trinityrnaseq/trinityrnaseq/archive/v2.2.0.tar.gz \
	&& tar -xzf v2.2.0.tar.gz \
	&& (cd /usr/local/bioinformatics/trinityrnaseq-2.2.0 && make && make plugins) \
	&& rm /usr/local/bioinformatics/v2.2.0.tar.gz

ENV PATH /usr/local/bioinformatics/trinityrnaseq-2.2.0:$PATH

# Install bowtie-1 (v.1.1.2; this version required for Trinity)
RUN wget --output-document=bowtie-1.1.2-linux-x86_64.zip \
	https://sourceforge.net/projects/bowtie-bio/files/bowtie/1.1.2/bowtie-1.1.2-linux-x86_64.zip/download \
	&& unzip bowtie-1.1.2-linux-x86_64.zip \
	&& rm bowtie-1.1.2-linux-x86_64.zip
	
ENV PATH /usr/local/bioinformatics/bowtie-1.1.2:$PATH


#RUN conda install -c anaconda libedit

# Install R (v3.4.1 0)
# RUN conda install -c r r-base='3.4.1 0'

# Install R Essentials (v1.6.0)
# RUN conda install -c r r-essentials=1.6.0


# Install R kernel for Jupyter notebooks
#RUN touch kernel_script_temp.R

#RUN echo '#!/usr/local/bioinformatics/R-3.2.5/bin/Rscript' >> kernel_script_temp.R \
#	&& echo 'install.packages(c("crayon", "pbdZMQ", "devtools"), repos = "http://cran.us.r-project.org")' >> kernel_script_temp.R \
#	&& echo 'devtools::install_github(paste0("IRkernel/", c("repr", "IRdisplay", "IRkernel")))' >> kernel_script_temp.R \
# 	&& echo 'IRkernel::installspec(user = FALSE)' >> kernel_script_temp.R

#RUN /usr/local/bioinformatics/R-3.2.5/bin/Rscript kernel_script_temp.R

## Install vcftools (v0.1.14)
RUN wget https://github.com/vcftools/vcftools/releases/download/v0.1.14/vcftools-0.1.14.tar.gz \
	&& tar -xzf vcftools-0.1.14.tar.gz \
	&& (cd /usr/local/bioinformatics/vcftools-0.1.14 && ./configure && make && make install) \
	&& rm vcftools-0.1.14.tar.gz

ENV PATH /usr/local/bioinformatics/vcftools-0.1.14:$PATH

# Install rpy2 for R magics in Jupyter Notebooks (v2.8.1)
#RUN conda install -c r rpy2=2.8.6

# Install ipyrad (v0.7.11)
RUN conda install -c ipyrad ipyrad=0.7.11

# Install minimap2 (v2.1.1)
RUN wget https://github.com/lh3/minimap2/releases/download/v2.1.1/minimap2-2.1.1_x64-linux.tar.bz2 \
	&& tar -xvjf minimap2-2.1.1_x64-linux.tar.bz2 \
	&& rm minimap2-2.1.1_x64-linux.tar.bz2

ENV PATH /usr/local/bioinformatics/minimap2-2.1.1_x64-linux:$PATH

# Install miniasm (v0.2)
RUN wget https://github.com/lh3/miniasm/archive/v0.2.tar.gz \
	&& tar -xzf v0.2.tar.gz \
	&& (cd /usr/local/bioinformatics/miniasm-0.2 && make) \
	&& rm v0.2.tar.gz

ENV PATH /usr/local/bioinformatics/miniasm-0.2:$PATH

# Install Racon (v0.5.0)
RUN wget https://github.com/isovic/racon/files/741519/racon-v0.5.0.tar.gz \
	&& tar -xzf racon-v0.5.0.tar.gz \
	&& (cd /usr/local/bioinformatics/racon-v0.5.0 && make) \
	&& rm racon-v0.5.0.tar.gz

ENV PATH /usr/local/bioinformatics/racon-v0.5.0:$PATH

# Install Quast (v4.5)

RUN wget https://sourceforge.net/projects/quast/files/quast-4.5.tar.gz \       
        && tar -xzf quast-4.5.tar.gz \
        && rm quast-4.5.tar.gz

ENV PATH /usr/local/bioinformatics/quast-4.5:$PATH

# Install Redundans

RUN git clone --recursive https://github.com/lpryszcz/redundans.git \
	&& (cd /usr/local/bioinformatics/redundans && bin/.compile.sh)

ENV PATH /usr/local/bioinformatics/redundans/bin/:$PATH

# Install Canu (v1.6)

RUN wget https://github.com/marbl/canu/releases/download/v1.6/canu-1.6.Linux-amd64.tar.xz \
	&& xz -dc canu-1.6.*.tar.xz | tar -xf - \
	&& rm canu-1.6.Linux-amd64.tar.xz

ENV PATH /usr/local/bioinformatics/canu-1.6/Linux-amd64/bin:$PATH

# Install Gnuplot (v5.2.0) (Used in Canu)

RUN wget https://sourceforge.net/projects/gnuplot/files/gnuplot/5.2.0/gnuplot-5.2.0.tar.gz \
	&& tar -xzf gnuplot-5.2.0.tar.gz \
	&& (cd /usr/local/bioinformatics/gnuplot-5.2.0 &&  ./configure && make && make install) \
	&& rm gnuplot-5.2.0.tar.gz

ENV PATH /usr/local/bioinformatics/gnuplot-5.2.0:$PATH

# Expose port for Jupyter Notebook
EXPOSE 8888
